dnl Process this file with autoconf to produce a configure script.
dnl $Id$

# requires autoconf
AC_PREREQ(2.52)

# init autoconf
AC_INIT(src/intrface.c)

# set library version number
MAJOR_VERSION=0
MINOR_VERSION=5
MICRO_VERSION=7
VERSION=$MAJOR_VERSION.$MINOR_VERSION.$MICRO_VERSION

AC_SUBST(MAJOR_VERSION)
AC_SUBST(MINOR_VERSION)
AC_SUBST(MICRO_VERSION)
AC_SUBST(VERSION)

# libtool versioning
LT_RELEASE=$MAJOR_VERSION.$MINOR_VERSION
LT_CURRENT=`expr $MINOR_VERSION + $MAJOR_VERSION`
LT_REVISION=$MICRO_VERSION
LT_AGE=$MINOR_VERSION
AC_SUBST(LT_RELEASE)
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)

PACKAGE=libtifiles
AC_SUBST(PACKAGE)

# init automake
AM_INIT_AUTOMAKE($PACKAGE, $VERSION)

AM_MAINTAINER_MODE

# specify a config file
AM_CONFIG_HEADER(config.h)

# Run test in a subshell; some versions of sh will print an error if
# an executable is not found, even if stderr is redirected.
# Redirect stdin to placate older versions of autoconf.  Sigh.
if (aclocal --print-ac-dir) </dev/null >/dev/null 2>&1 && test -w `aclocal --print-ac-dir`; then
    ACLOCALDIR=`aclocal --print-ac-dir`
    AC_SUBST(ACLOCALDIR)
fi
AM_CONDITIONAL(Aclocal, test x$ACLOCALDIR != x )

# determine the system type
dnl AC_CANONICAL_SYSTEM
# determine the host type
AC_CANONICAL_HOST

# change the default prefix (/usr/local) to /usr
AC_PREFIX_DEFAULT('/usr')

# build time sanity check...
AM_SANITY_CHECK

# checks for programs.
AC_PROG_CC
AC_PROG_CXX
AC_PROG_INSTALL
AC_PROG_MAKE_SET
AC_PROG_LN_S
AC_ISC_POSIX
AC_PROG_GCC_TRADITIONAL
AC_PROG_AWK

# find pkg-config
AC_PATH_PROG(PKG_CONFIG, pkg-config, no)
if test x$PKG_CONFIG = xno ; then
  AC_MSG_ERROR([*** pkg-config not found. See http://www.freedesktop.org/software/pkgconfig/])
fi

# checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_CHECK_HEADERS(strings.h sys/types.h unistd.h alloca.h errno.h fcntl.h)
AC_CHECK_HEADERS(stdint.h)

# checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_UID_T
AC_C_INLINE
AC_TYPE_MODE_T
AC_TYPE_OFF_T
AC_TYPE_SIZE_T
AC_TYPE_PID_T
AC_TYPE_SIGNAL
AC_STRUCT_TM

# checks for library functions.
AC_FUNC_VPRINTF
AC_FUNC_FORK
AC_FUNC_MALLOC
AC_FUNC_STAT
AC_CHECK_FUNCS(socket strstr pipe getwd memchr mkfifo strrchr memset)

# BSD stuffs
AC_MSG_CHECKING([for BSD])
case "$host" in
  *-*-*bsd*)    tifiles_native_bsd=yes ;;
  *)            tifiles_native_bsd=no  ;;
esac
AC_MSG_RESULT([$tifiles_native_bsd])
AM_CONDITIONAL(OS_BSD, test "$tifiles_native_bsd" = "yes")

# Win32 stuffs
AC_MSG_CHECKING([for Win32])
case "$host" in
  *-*-mingw*)	tifiles_native_win32=yes ;;
  *-*-cygwin)	tifiles_native_win32=yes ;;
  *)		tifiles_native_win32=no  ;;
esac
AC_MSG_RESULT([$tifiles_native_win32])
AM_CONDITIONAL(OS_WIN32, test "$tifiles_native_win32" = "yes")

# Ensure MSVC-compatible struct packing convention is used when
# compiling for Win32 with gcc.
# What flag to depends on gcc version: gcc3 uses "-mms-bitfields", while
# gcc2 uses "-fnative-struct".
if test x"$tifiles_native_win32" = xyes; then
  if test x"$GCC" = xyes; then
    msnative_struct=''
    AC_MSG_CHECKING([how to get MSVC-compatible struct packing])
    if test -z "$ac_cv_prog_CC"; then
      our_gcc="$CC"
    else
      our_gcc="$ac_cv_prog_CC"
    fi
    case `$our_gcc --version | sed -e 's,\..*,.,' -e q` in
      2.)
        if $our_gcc -v --help 2>/dev/null | grep fnative-struct >/dev/null; then
          msnative_struct='-fnative-struct'
        fi
        ;;
      *)
        if $our_gcc -v --help 2>/dev/null | grep ms-bitfields >/dev/null; then
          msnative_struct='-mms-bitfields'
        fi
        ;;
    esac
    if test x"$msnative_struct" = x ; then
      AC_MSG_RESULT([no way])
      AC_MSG_WARN([produced libraries might be incompatible with MSVC-compiled code])
    else
      CFLAGS="$CFLAGS $msnative_struct"
      AC_MSG_RESULT([${msnative_struct}])
    fi
  fi
fi

AC_MINGW32
AC_EXEEXT

case $host in
  *-*-mingw*) ARCH="-D__WIN32__ -D__MINGW32__ -Os -s" ;;
  *-*-cygwin) ARCH="-D__WIN32__ -D__CYGWIN__ -mno-cygwin" ;;
  *-*-*bsd*)  ARCH="-D__BSD__" ;;
  *)          ARCH="-D__LINUX__" ;;
esac

# initialize libtool
AM_DISABLE_STATIC
AC_LIBTOOL_WIN32_DLL
AM_PROG_LIBTOOL
AC_PROG_LIBTOOL

# gettext support
ALL_LINGUAS="fr"
AM_GNU_GETTEXT

locale_dir='${prefix}/share/locale'
AC_SUBST(locale_dir)

# some extra flags
CFLAGS="$CFLAGS $ARCH -Wall -D_REENTRANT"
LDFLAGS="$LDFLAGS $INTLLIBS"

# pass flags
AC_SUBST(CFLAGS)
AC_SUBST(LDFLAGS)

AC_OUTPUT([
Makefile 
docs/Makefile 
macros/Makefile 
man/Makefile
man/tifiles-config.1 
src/Makefile 
tests/Makefile 
intl/Makefile
po/Makefile.in
tifiles-config
libtifiles.lsm
libtifiles.spec
tifiles.pc])

echo Now, you can type 'make' and 'make install'
